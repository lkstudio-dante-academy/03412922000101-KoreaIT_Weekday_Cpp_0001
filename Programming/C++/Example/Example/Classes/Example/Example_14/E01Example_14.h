#pragma once

#include "../../Global/Define/KDefine+Global.h"

/*
* 추상 클래스 (Abstract Class) 란?
* - 일반적인 클래스와 달리 직접적으로 객체화 시키는 것이 불가능한 클래스를 의미한다. (+ 즉,
* 추상 클래스를 대상으로 객체화를 시도하면 컴파일 에러가 발생한다는 것을 알 수 있다.)
* 
* C++ 은 추상 클래스를 정의하기 위한 별도의 키워드는 존재하지 않으며 클래스 내부에
* 순수 가상 함수를 정의 할 경우 해당 클래스는 객체화 시킬 수 없는 추상 클래스가 된다.
* 
* Ex)
* class CSomeClass
* {
* public:
* 
*		virtual void SomeFunc(void) = 0;
* };
* 
* CSomeClass oSomeObj;			<- 컴파일 에러
* 
* 위와 같이 클래스 내부에 순수 가상 함수를 정의 할 경우 해당 클래스는 객체화 시킬 수 없는
* 추상 클래스가 된다.
* 
* 추상 클래스는 직접적으로 객체화 시키는 것은 불가능하지만 자식 클래스를 통해 간접적으로
* 객체화 시키는 것은 가능하다.
* 
* 따라서 추상 클래스는 일반적으로 상속을 위한 클래스를 정의 할 때 주로 활용 된다. (+ 즉,
* 추상 클래스를 상속을 위해 정의 할 경우 해당 클래스의 소멸자를 반드시 가상 소멸자로
* 정의해야한다는 것을 의미한다.)
* 
* 단, 추상 클래스를 상속하는 자식 클래스는 부모 클래스에 존재하는 모든 순수 가상 함수를
* 오버라이드 해아하며 만약 1 개라도 오버라이드 하지 않을 경우 자식 클래스 또한 객체화가 불가능한
* 추상 클래스가 된다. (+ 즉, 클래스 내부에 순수 가상 함수가 1 개라도 존재 할 경우 해당 클래스는
* 추상 클래스 된다는 것을 알 수 있다.)
*/
namespace E01Example
{
	/** Example 14 */
	int E01Example_14(int argc, char* args[]);
}
