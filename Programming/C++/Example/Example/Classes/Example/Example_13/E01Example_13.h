#pragma once

#include "../../Global/Define/KDefine+Global.h"

/*
* 다형성이란?
* - 사물이 상황에 따라 여러 형태를 지니는 개념을 의미한다. (+ 즉, 다형성은 사물을 바라보는 시점에
* 따라 여러 형태로 인지 된다는 개념이라는 것을 알 수 있다.)
* 
* C++ 은 클래스의 상속을 활용해서 다형성을 흉내내는 것이 가능하다. (+ 즉, C++ 의 다형성은
* 상속을 기반으로 구현 된다는 것을 알 수 있다.)
* 
* C++ 은 부모 클래스 포인터 (+ or 레퍼런스) 로 자식 클래스를 통해 생성 된 객체를 참조하는 것이
* 가능하며 이는 부모 클래스가 참조하는 객체를 부모 클래스 객체로 인지한다는 것을 의미한다. (+ 즉,
* 객체를 참조하는 포인터 형에 따라 해당 객체를 다른 형태로 인지한다는 것을 알 수 있다.)
* 
* Ex)
* class CBase
* {
*		// Do Something
* };
* 
* class CDerived : public CBase
* {
*		// Do Something
* };
* 
* CBase* pSomeObj = new CDerived();
* 
* 위와 같이 부모 클래스 포인터로 자식 클래스를 통해 생성 된 객체를 참조하는 것이 가능하다. (+ 즉,
* 자식 클래스 객체를 부모 클래스 객체로 인지한다는 것을 의미한다.)
* 
* 추상화란?
* - 사물을 인터페이스를 통해 제어함으로서 구체적인 사물의 정보는 감추는 개념을 의미한다. (+ 즉,
* 추상화는 제어하는 사물을 정확하게 알지 못하더라도 해당 사물을 제어하는 개념이라는 것을 
* 알 수 있다.)
* 
* C++ 추상화는 상속과 다형성을 활용해서 구현하는 것이 가능하며 객체를 부모 클래스 포인터로
* 참조함으로서 제어하는 객체에 대한 세부적인 구현을 모른다하더라도 해당 객체를 제어하는 것이
* 가능하다.
*/
namespace E01Example
{
	/** Example 13 */
	int E01Example_13(int argc, char* args[]);
}
